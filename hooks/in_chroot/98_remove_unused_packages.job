#!/bin/bash
# Copyright (c) 2016 Deepin Ltd. All rights reserved.
# Use of this source is governed by General Public License that can be found
# in the LICENSE file.

# Remove unused packages
# If `deepin-installer-reborn` is uninstalled, deepin-installer-settings
# will be removed too. Both "installer_get" and "installer_set" will not
# work any more in chroot environment.
# So, always put this script to last step of in_chroot stage.

# TODO(xushaohua): It take too much time to uninstall packages in loongson.
# So skip this step temporarily.
if ! is_x86; then
  return 0
fi

declare -a UNUSED_PKGS

DI_LUPIN=$(installer_get "DI_LUPIN")

# Check whether btrfs filesystem is used in machine.
detect_btrfs() {
  for i in $(lsblk -o FSTYPE | sed '/^$/d' | uniq); do
    [ "${i}" = "btrfs" ] && return 0
  done
  return 1
}

# Check whether current machine is virtualbox.
detect_vbox() {
  if dmidecode | grep -q "Product Name: VirtualBox"; then
    return 0
  fi
  return 1
}

# Uninstall "deepin-installer-reborn" only if reboot_setup is false.
if [ x$(installer_get "system_info_setup_after_reboot") != xtrue ]; then
  UNUSED_PKGS+=(deepin-installer-reborn)
fi

if grep -q boot=casper /proc/cmdline; then
  UNUSED_PKGS+=("casper")
fi
if grep -q boot=live /proc/cmdline; then
  UNUSED_PKGS+=("live-boot*" "live-config*")
fi

detect_btrfs || UNUSED_PKGS+=("btrfs-tools")
[ x${DI_LUPIN} = "xtrue" ] || UNUSED_PKGS+=("lupin-support")
detect_vbox || UNUSED_PKGS+=("virtualbox-guest-*")

# Check package existence.
declare -a EXISTING_UNUSED_PKGS
for pkg in ${UNUSED_PKGS[@]}; do
  dpkg -l | grep -q $pkg && EXISTING_UNUSED_PKGS+=($pkg)
done
msg "Remove packages: ${EXISTING_UNUSED_PKGS[@]}"
apt-get -y purge ${EXISTING_UNUSED_PKGS[@]}
apt-get -y autoremove --purge

# Returns 0 explicitly, because apt-get --purge might returns error if package
# dependency does not fit.
exit 0
